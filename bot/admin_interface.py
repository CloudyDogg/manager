import logging
from aiogram import Bot, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import BOT_TOKEN, CHAT_ID_1, CHAT_ID_2, CHATS, MESSAGES, ADMIN_IDS
from db_manager import DBManager
from chat_manager import chat_manager
from session_manager import session_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM (–∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞)
class AdminStates(StatesGroup):
    main_menu = State()
    viewing_settings = State()
    editing_settings = State()
    viewing_users = State()
    viewing_requests = State()
    managing_accounts = State()
    adding_account = State()
    confirming_code = State()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in ADMIN_IDS

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def get_admin_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    keyboard.add(
        InlineKeyboardButton(text=MESSAGES["settings_button"], callback_data="admin:settings"),
        InlineKeyboardButton(text=MESSAGES["stats_button"], callback_data="admin:stats")
    )
    
    keyboard.add(
        InlineKeyboardButton(text=MESSAGES["users_button"], callback_data="admin:users"),
        InlineKeyboardButton(text=MESSAGES["pending_button"], callback_data="admin:pending")
    )
    
    keyboard.add(
        InlineKeyboardButton(text=MESSAGES["accounts_button"], callback_data="admin:accounts")
    )
    
    return keyboard

def get_settings_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤
    keyboard.add(
        InlineKeyboardButton(
            text=f"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:settings_chat:{CHAT_ID_1}"
        ),
        InlineKeyboardButton(
            text=f"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:settings_chat:{CHAT_ID_2}"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
    keyboard.add(InlineKeyboardButton(
        text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ ü§ñ",
        callback_data="admin:settings_bot"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:back_to_main"
    ))
    
    return keyboard

def get_chat_settings_keyboard(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
    keyboard.add(
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ/–æ–ø–∏—Å–∞–Ω–∏–µ üìù",
            callback_data=f"admin:edit_chat_info:{chat_id}"
        ),
        InlineKeyboardButton(
            text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ üëã",
            callback_data=f"admin:edit_welcome:{chat_id}"
        ),
        InlineKeyboardButton(
            text="–†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è üîê",
            callback_data=f"admin:edit_join_mode:{chat_id}"
        ),
        InlineKeyboardButton(
            text="–í—ã–±—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è üë®‚Äçüíº",
            callback_data=f"admin:select_accounts:{chat_id}"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:settings"
    ))
    
    return keyboard

def get_users_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —á–∞—Ç–∞–º
    keyboard.add(
        InlineKeyboardButton(
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:users_chat:{CHAT_ID_1}"
        ),
        InlineKeyboardButton(
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:users_chat:{CHAT_ID_2}"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard.add(InlineKeyboardButton(
        text="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üîç",
        callback_data="admin:search_user"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:back_to_main"
    ))
    
    return keyboard

def get_accounts_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    keyboard.add(
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç ‚ûï",
            callback_data="admin:add_account"
        ),
        InlineKeyboardButton(
            text="–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é üîÑ",
            callback_data="admin:refresh_session"
        ),
        InlineKeyboardButton(
            text="–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤ üîç",
            callback_data="admin:account_status"
        ),
        InlineKeyboardButton(
            text="–°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏–∏ üîê",
            callback_data="admin:reset_sessions"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:back_to_main"
    ))
    
    return keyboard

def get_stats_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    keyboard.add(
        InlineKeyboardButton(
            text="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà",
            callback_data="admin:stats_general"
        )
    )
    
    keyboard.add(
        InlineKeyboardButton(
            text=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:stats_chat:{CHAT_ID_1}"
        ),
        InlineKeyboardButton(
            text=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:stats_chat:{CHAT_ID_2}"
        )
    )
    
    keyboard.add(
        InlineKeyboardButton(
            text="–ü–æ –¥–Ω—è–º üìÖ",
            callback_data="admin:stats_daily"
        ),
        InlineKeyboardButton(
            text="–ü–æ –Ω–µ–¥–µ–ª—è–º üìÜ",
            callback_data="admin:stats_weekly"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:back_to_main"
    ))
    
    return keyboard

def get_request_action_keyboard(request_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–æ–π"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    keyboard.add(
        InlineKeyboardButton(
            text="–û–¥–æ–±—Ä–∏—Ç—å ‚úÖ",
            callback_data=f"admin:approve_request:{request_id}"
        ),
        InlineKeyboardButton(
            text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå",
            callback_data=f"admin:reject_request:{request_id}"
        )
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.add(InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data="admin:pending"
    ))
    
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def cmd_admin(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º.")
        return
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(AdminStates.main_menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –º–µ–Ω—é
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n–í—ã –≤–æ—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
        reply_markup=get_admin_main_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def process_admin_settings(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    await state.set_state(AdminStates.viewing_settings)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:",
        reply_markup=get_settings_keyboard()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_stats(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=get_stats_keyboard()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_users(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await state.set_state(AdminStates.viewing_users)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_users_keyboard()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_pending(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞—è–≤–æ–∫"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫
    await state.set_state(AdminStates.viewing_requests)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫
    pending_requests = DBManager.get_pending_requests()
    
    if not pending_requests:
        # –ï—Å–ª–∏ –Ω–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="üîÑ –ó–∞—è–≤–∫–∏\n\n–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç –∑–∞—è–≤–æ–∫, –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è.",
            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:back_to_main")
            )
        )
    else:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞—è–≤–∫–∏
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        request = pending_requests[0]
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        session = DBManager.get_session()
        try:
            from db_manager import User
            user = session.query(User).filter(User.id == request.user_id).first()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat_info = chat_manager.get_chat_info(request.chat_id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            text = (
                f"üîÑ –ó–∞—è–≤–∫–∏ (1/{len(pending_requests)})\n\n"
                f"–ó–∞—è–≤–∫–∞ #{request.id}\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username if user.username else '–ù–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'} (ID: {user.user_id})\n"
                f"–ò–º—è: {user.first_name} {user.last_name if user.last_name else ''}\n"
                f"–ß–∞—Ç: {chat_info['name']}\n"
                f"–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {request.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
                f"–ß—Ç–æ –¥–µ–ª–∞–µ–º —Å —ç—Ç–æ–π –∑–∞—è–≤–∫–æ–π?"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                text=text,
                reply_markup=get_request_action_keyboard(request.id)
            )
        finally:
            session.close()
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_accounts(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    await state.set_state(AdminStates.managing_accounts)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_accounts_keyboard()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_back_to_main(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(AdminStates.main_menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        reply_markup=get_admin_main_keyboard()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_settings_chat(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(selected_chat_id=chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = chat_manager.get_chat_info(chat_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = (
        f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞: {chat_info['name']}\n\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {chat_info['description']}\n"
        f"–†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {chat_info['join_mode']}\n"
        f"–ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if chat_info['is_active'] else '–ù–µ—Ç'}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —á–∞—Ç–∞
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=text,
        reply_markup=get_chat_settings_keyboard(chat_id)
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_approve_request(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–∫–∏ –∏–∑ callback data
    request_id = int(callback_query.data.split(":")[2])
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    success, message = await chat_manager.process_manual_join_request(
        request_id=request_id,
        approved=True,
        admin_id=callback_query.from_user.id
    )
    
    if success:
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚úÖ –ó–∞—è–≤–∫–∞ #{request_id} —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞!",
            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            )
        )
    else:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {message}",
            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            )
        )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

async def process_admin_reject_request(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–∫–∏ –∏–∑ callback data
    request_id = int(callback_query.data.split(":")[2])
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    success, message = await chat_manager.process_manual_join_request(
        request_id=request_id,
        approved=False,
        admin_id=callback_query.from_user.id
    )
    
    if success:
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –ó–∞—è–≤–∫–∞ #{request_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            )
        )
    else:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {message}",
            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            )
        )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await callback_query.answer()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
def register_admin_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(cmd_admin, Command("admin"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    dp.callback_query.register(
        process_admin_settings, 
        lambda c: c.data == "admin:settings"
    )
    
    dp.callback_query.register(
        process_admin_stats, 
        lambda c: c.data == "admin:stats"
    )
    
    dp.callback_query.register(
        process_admin_users, 
        lambda c: c.data == "admin:users"
    )
    
    dp.callback_query.register(
        process_admin_pending, 
        lambda c: c.data == "admin:pending"
    )
    
    dp.callback_query.register(
        process_admin_accounts, 
        lambda c: c.data == "admin:accounts"
    )
    
    dp.callback_query.register(
        process_admin_back_to_main, 
        lambda c: c.data == "admin:back_to_main"
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–æ–≤
    dp.callback_query.register(
        process_admin_settings_chat, 
        lambda c: c.data.startswith("admin:settings_chat:")
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞—è–≤–æ–∫
    dp.callback_query.register(
        process_admin_approve_request, 
        lambda c: c.data.startswith("admin:approve_request:")
    )
    
    dp.callback_query.register(
        process_admin_reject_request, 
        lambda c: c.data.startswith("admin:reject_request:")
    )
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ 