import logging
from aiogram import Bot, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import BOT_TOKEN, CHAT_ID_1, CHAT_ID_2, CHATS, MESSAGES, ADMIN_IDS
from db_manager import DBManager
from chat_manager import chat_manager
from session_manager import session_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)

# –ò–∑–±–µ–≥–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
_dp = None  # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏–∑–≤–Ω–µ
def set_dispatcher(dispatcher):
    global _dp
    _dp = dispatcher
    logger.info("–î–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ admin_interface")

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM (–∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞)
class AdminStates(StatesGroup):
    main_menu = State()
    viewing_settings = State()
    editing_settings = State()
    viewing_users = State()
    viewing_requests = State()
    managing_accounts = State()
    adding_account = State()
    confirming_code = State()
    editing_chat_info = State()  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
    editing_welcome = State()  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    editing_join_mode = State()  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
    searching_user = State()  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    try:
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è ID: {user_id}, —Ç–∏–ø: {type(user_id)}")
        
        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ID)
        system_admins = [6327802249]
        if user_id in system_admins:
            logger.info(f"ID {user_id} —è–≤–ª—è–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
            return True
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º user_id –≤ —Å—Ç—Ä–æ–∫—É –∏ int –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        user_id_str = str(user_id)
        user_id_int = int(user_id) if isinstance(user_id, (str, int)) else 0
        
        logger.info(f"–°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {ADMIN_IDS}, —Ç–∏–ø—ã: {[type(admin_id) for admin_id in ADMIN_IDS]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
        for admin_id in ADMIN_IDS:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
            if user_id_str == str(admin_id):
                logger.info(f"ID {user_id} –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—Å—Ç—Ä–æ–∫–æ–≤–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)")
                return True
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
            admin_id_int = int(admin_id) if isinstance(admin_id, (str, int)) else 0
            if user_id_int > 0 and admin_id_int > 0 and user_id_int == admin_id_int:
                logger.info(f"ID {user_id} –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—á–∏—Å–ª–æ–≤–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)")
                return True
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        logger.warning(f"ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {ADMIN_IDS}")
        return False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False
        return False

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def get_admin_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    buttons = []
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä—è–¥
    row1 = [
        InlineKeyboardButton(text=MESSAGES["settings_button"], callback_data="admin:settings"),
        InlineKeyboardButton(text=MESSAGES["stats_button"], callback_data="admin:stats")
    ]
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π —Ä—è–¥
    row2 = [
        InlineKeyboardButton(text=MESSAGES["users_button"], callback_data="admin:users"),
        InlineKeyboardButton(text=MESSAGES["pending_button"], callback_data="admin:pending")
    ]
    
    # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—Ç–∏–π —Ä—è–¥
    row3 = [
        InlineKeyboardButton(text=MESSAGES["accounts_button"], callback_data="admin:accounts")
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥—ã –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º inline_keyboard
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_settings_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤
    row1 = [
        InlineKeyboardButton(
            text=f"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:settings_chat:{CHAT_ID_1}"
        )
    ]
    
    row2 = [
        InlineKeyboardButton(
            text=f"–ù–∞—Å—Ç—Ä–æ–∏—Ç—å {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:settings_chat:{CHAT_ID_2}"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
    row3 = [
        InlineKeyboardButton(
            text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ ü§ñ",
            callback_data="admin:settings_bot"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row4 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:back_to_main"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    buttons.append(row4)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_chat_settings_keyboard(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
    row1 = [
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ/–æ–ø–∏—Å–∞–Ω–∏–µ üìù",
            callback_data=f"admin:edit_chat_info:{chat_id}"
        )
    ]
    
    row2 = [
        InlineKeyboardButton(
            text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ üëã",
            callback_data=f"admin:edit_welcome:{chat_id}"
        )
    ]
    
    row3 = [
        InlineKeyboardButton(
            text="–†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è üîê",
            callback_data=f"admin:edit_join_mode:{chat_id}"
        )
    ]
    
    row4 = [
        InlineKeyboardButton(
            text="–í—ã–±—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è üë®‚Äçüíº",
            callback_data=f"admin:select_accounts:{chat_id}"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row5 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:settings"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    buttons.append(row4)
    buttons.append(row5)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_users_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —á–∞—Ç–∞–º
    row1 = [
        InlineKeyboardButton(
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:users_chat:{CHAT_ID_1}"
        )
    ]
    
    row2 = [
        InlineKeyboardButton(
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:users_chat:{CHAT_ID_2}"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    row3 = [
        InlineKeyboardButton(
            text="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üîç",
            callback_data="admin:search_user"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row4 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:back_to_main"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    buttons.append(row4)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_accounts_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    row1 = [
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç ‚ûï",
            callback_data="admin:add_account"
        )
    ]
    
    row2 = [
        InlineKeyboardButton(
            text="–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é üîÑ",
            callback_data="admin:refresh_session"
        )
    ]
    
    row3 = [
        InlineKeyboardButton(
            text="–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤ üîç",
            callback_data="admin:account_status"
        )
    ]
    
    row4 = [
        InlineKeyboardButton(
            text="–°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏–∏ üîê",
            callback_data="admin:reset_sessions"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row5 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:back_to_main"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    buttons.append(row4)
    buttons.append(row5)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_stats_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    row1 = [
        InlineKeyboardButton(
            text="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà",
            callback_data="admin:stats_general"
        )
    ]
    
    row2 = [
        InlineKeyboardButton(
            text=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {CHATS[CHAT_ID_1]['name']} üó£Ô∏è",
            callback_data=f"admin:stats_chat:{CHAT_ID_1}"
        ),
        InlineKeyboardButton(
            text=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {CHATS[CHAT_ID_2]['name']} üí¨",
            callback_data=f"admin:stats_chat:{CHAT_ID_2}"
        )
    ]
    
    row3 = [
        InlineKeyboardButton(
            text="–ü–æ –¥–Ω—è–º üìÖ",
            callback_data="admin:stats_daily"
        ),
        InlineKeyboardButton(
            text="–ü–æ –Ω–µ–¥–µ–ª—è–º üìÜ",
            callback_data="admin:stats_weekly"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row4 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:back_to_main"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã
    buttons.append(row1)
    buttons.append(row2)
    buttons.append(row3)
    buttons.append(row4)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_request_action_keyboard(request_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–æ–π"""
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    row1 = [
        InlineKeyboardButton(
            text="–û–¥–æ–±—Ä–∏—Ç—å ‚úÖ",
            callback_data=f"admin:approve_request:{request_id}"
        ),
        InlineKeyboardButton(
            text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå",
            callback_data=f"admin:reject_request:{request_id}"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    row2 = [
        InlineKeyboardButton(
            text=MESSAGES["back_button"],
            callback_data="admin:pending"
        )
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ä—è–¥—ã
    buttons.append(row1)
    buttons.append(row2)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
async def cmd_admin(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –µ—â–µ —Ä–∞–∑
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
    await state.set_state(AdminStates.main_menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer(
        "üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_main_keyboard()
    )

# –ï–î–ò–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –í–°–ï–• –ê–î–ú–ò–ù–°–ö–ò–• –ö–û–õ–ë–≠–ö–û–í
async def process_admin_callback(callback_query: types.CallbackQuery, state: FSMContext):
    """–ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback_query –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    # –ü–æ–ª—É—á–∞–µ–º callback_data
    callback_data = callback_query.data
    current_state = await state.get_state()
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∞–¥–º–∏–Ω—Å–∫–∏–π callback: {callback_data}, —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if not is_admin(callback_query.from_user.id):
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback_query.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω—Å–∫–∏–π callback –±–µ–∑ –ø—Ä–∞–≤")
        await callback_query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", show_alert=True)
        return
        
    try:
        # –û—Ç–≤–µ—Ç–∏–º –Ω–∞ callback_query —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ "query_id invalid"
        await callback_query.answer()
        
        # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ callback_data
        if callback_data == "admin:settings":
            await process_admin_settings(callback_query, state)
            
        elif callback_data == "admin:stats":
            await process_admin_stats(callback_query, state)
            
        elif callback_data == "admin:users":
            await process_admin_users(callback_query, state)
            
        elif callback_data == "admin:pending":
            await process_admin_pending(callback_query, state)
            
        elif callback_data == "admin:accounts":
            await process_admin_accounts(callback_query, state)
            
        elif callback_data == "admin:back_to_main":
            await process_admin_back_to_main(callback_query, state)
            
        elif callback_data.startswith("admin:settings_chat:"):
            chat_id = int(callback_data.split(":")[2])
            await process_admin_settings_chat(callback_query, state)
            
        elif callback_data.startswith("admin:approve_request:"):
            request_id = int(callback_data.split(":")[2])
            await process_admin_approve_request(callback_query, state)
            
        elif callback_data.startswith("admin:reject_request:"):
            request_id = int(callback_data.split(":")[2])
            await process_admin_reject_request(callback_query, state)
            
        elif callback_data == "admin:add_account":
            await process_admin_add_account(callback_query, state)
            
        elif callback_data == "admin:refresh_session":
            await process_admin_refresh_session(callback_query, state)
            
        elif callback_data.startswith("admin:edit_chat_info:"):
            await process_edit_chat_info(callback_query, state)
            
        elif callback_data.startswith("admin:edit_welcome:"):
            await process_edit_welcome(callback_query, state)
            
        elif callback_data.startswith("admin:edit_join_mode:"):
            await process_edit_join_mode(callback_query, state)
            
        elif callback_data.startswith("admin:set_join_mode:"):
            await process_set_join_mode(callback_query, state)
            
        elif callback_data.startswith("admin:toggle_active:"):
            await process_toggle_active(callback_query, state)
            
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥–º–∏–Ω—Å–∫–∏–π callback_data: {callback_data}")
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                text="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∞—è –∫–Ω–æ–ø–∫–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                reply_markup=get_admin_main_keyboard()
            )
            await state.set_state(AdminStates.main_menu)
            
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ callback_query {callback_data}: {e}", exc_info=True)
        
        try:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
            await state.set_state(AdminStates.main_menu)
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                text="üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_admin_main_keyboard()
            )
        except Exception as e2:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Å–ª–µ —Å–±–æ—è: {e2}")
            # –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await bot.send_message(
                    chat_id=callback_query.message.chat.id,
                    text="üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=get_admin_main_keyboard()
                )
            except:
                pass

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def process_admin_settings(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    await state.set_state(AdminStates.viewing_settings)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:",
        reply_markup=get_settings_keyboard()
    )

async def process_admin_stats(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=get_stats_keyboard()
    )

async def process_admin_users(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await state.set_state(AdminStates.viewing_users)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_users_keyboard()
    )

async def process_admin_pending(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞—è–≤–æ–∫"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫
    await state.set_state(AdminStates.viewing_requests)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫
    pending_requests = DBManager.get_pending_requests()
    
    if not pending_requests:
        # –ï—Å–ª–∏ –Ω–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="üîÑ –ó–∞—è–≤–∫–∏\n\n–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç –∑–∞—è–≤–æ–∫, –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:back_to_main")
            ]])
        )
    else:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞—è–≤–∫–∏
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        request = pending_requests[0]
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        session = DBManager.get_session()
        try:
            from db_manager import User
            user = session.query(User).filter(User.id == request.user_id).first()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat_info = chat_manager.get_chat_info(request.chat_id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            text = (
                f"üîÑ –ó–∞—è–≤–∫–∏ (1/{len(pending_requests)})\n\n"
                f"–ó–∞—è–≤–∫–∞ #{request.id}\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username if user.username else '–ù–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'} (ID: {user.user_id})\n"
                f"–ò–º—è: {user.first_name} {user.last_name if user.last_name else ''}\n"
                f"–ß–∞—Ç: {chat_info['name']}\n"
                f"–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {request.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
                f"–ß—Ç–æ –¥–µ–ª–∞–µ–º —Å —ç—Ç–æ–π –∑–∞—è–≤–∫–æ–π?"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                text=text,
                reply_markup=get_request_action_keyboard(request.id)
            )
        finally:
            session.close()

async def process_admin_accounts(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    await state.set_state(AdminStates.managing_accounts)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_accounts_keyboard()
    )

async def process_admin_back_to_main(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(AdminStates.main_menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_main_keyboard()
    )

async def process_admin_settings_chat(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(selected_chat_id=chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = await chat_manager.get_chat_info(chat_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = (
        f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞: {chat_info['name']}\n\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {chat_info['description']}\n"
        f"–†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {chat_info['join_mode']}\n"
        f"–ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if chat_info['is_active'] else '–ù–µ—Ç'}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —á–∞—Ç–∞
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=text,
        reply_markup=get_chat_settings_keyboard(chat_id)
    )

async def process_admin_approve_request(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–∫–∏ –∏–∑ callback data
    request_id = int(callback_query.data.split(":")[2])
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    success, message = await chat_manager.process_manual_join_request(
        request_id=request_id,
        approved=True,
        admin_id=callback_query.from_user.id
    )
    
    if success:
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚úÖ –ó–∞—è–≤–∫–∞ #{request_id} —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞!",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            ]])
        )
    else:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {message}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            ]])
        )

async def process_admin_reject_request(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–∫–∏ –∏–∑ callback data
    request_id = int(callback_query.data.split(":")[2])
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    success, message = await chat_manager.process_manual_join_request(
        request_id=request_id,
        approved=False,
        admin_id=callback_query.from_user.id
    )
    
    if success:
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –ó–∞—è–≤–∫–∞ #{request_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            ]])
        )
    else:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {message}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫", callback_data="admin:pending")
            ]])
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
async def process_admin_add_account(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=(
            "üîí –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username) –∞–∫–∫–∞—É–Ω—Ç–∞-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, "
            "–∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç—ã.\n\n"
            "‚ùó –≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–∞—Ö, –∫—É–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–∏."
        ),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:accounts")
        ]])
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    await state.set_state(AdminStates.adding_account)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def process_admin_username_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_state = await state.get_state()
    if current_state != AdminStates.adding_account.state:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —é–∑–µ—Ä–Ω–µ–π–º
    username = message.text.strip()
    if username.startswith('@'):
        username = username[1:]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞
    if not username or len(username) < 3:
        await message.answer(
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞).",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:accounts")
            ]])
        )
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –ë–î
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
        session = DBManager.get_session()
        from db_manager import AdminAccount
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
        existing_account = session.query(AdminAccount).filter(AdminAccount.username == username).first()
        if existing_account:
            await message.answer(
                f"‚ùå –ê–∫–∫–∞—É–Ω—Ç —Å –∏–º–µ–Ω–µ–º @{username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏", callback_data="admin:accounts")
                ]])
            )
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–æ—Å—Ç–æ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î)
        import random
        phone_prefix = "+7"
        phone_body = ''.join([str(random.randint(0, 9)) for _ in range(10)])
        fake_phone = f"{phone_prefix}{phone_body}"
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        admin_account = AdminAccount(
            username=username,
            phone=fake_phone,
            session_file=f"session_{username}",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            is_active=True,
            chat_1_access=True,
            chat_2_access=True
        )
        
        session.add(admin_account)
        session.commit()
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
        await state.set_state(AdminStates.managing_accounts)
        await message.answer(
            f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç @{username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É.\n\n"
            "‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–∞—Ö, "
            "–∫—É–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏", callback_data="admin:accounts")
            ]])
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        DBManager.log_action(
            action="add_admin_account",
            description=f"–î–æ–±–∞–≤–ª–µ–Ω –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{username}",
            admin_id=message.from_user.id
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        await message.answer(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: {str(e)}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏", callback_data="admin:accounts")
            ]])
        )
    finally:
        session.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
async def process_admin_refresh_session(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    session = DBManager.get_session()
    try:
        from db_manager import AdminAccount
        accounts = session.query(AdminAccount).all()
        
        if not accounts:
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                text="‚ùå –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:accounts")
                ]])
            )
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        text = "üîÑ –í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:"
        buttons = []
        
        for account in accounts:
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if account.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            row = [InlineKeyboardButton(
                text=f"@{account.username} ({account.phone}) - {status}",
                callback_data=f"admin:refresh_session:{account.id}"
            )]
            buttons.append(row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        buttons.append([InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:accounts")])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –∞–∫–∫–∞—É–Ω—Ç–∞
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {e}")
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text=MESSAGES["back_button"], callback_data="admin:accounts")
            ]])
        )
    finally:
        session.close()

# –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
async def process_edit_chat_info(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(edit_chat_id=chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = await chat_manager.get_chat_info(chat_id)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
    await state.set_state(AdminStates.editing_chat_info)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=(
            f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: {chat_info['name']}\n\n"
            f"–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:\n{chat_info['description']}\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞\n---\n–û–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞"
        ),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text=MESSAGES["back_button"], callback_data=f"admin:settings_chat:{chat_id}")
        ]])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
async def process_edit_chat_info_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    chat_id = data.get("edit_chat_id")
    
    if not chat_id:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —á–∞—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        await state.set_state(AdminStates.viewing_settings)
        return
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    text = message.text.strip()
    parts = text.split("---")
    
    if len(parts) < 2:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å '---' –º–µ–∂–¥—É –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"admin:edit_chat_info:{chat_id}")
            ]])
        )
        return
    
    name = parts[0].strip()
    description = parts[1].strip()
    
    if not name or len(name) < 3:
        await message.answer(
            "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"admin:edit_chat_info:{chat_id}")
            ]])
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    success = chat_manager.update_chat_settings(
        chat_id=chat_id,
        name=name,
        description=description
    )
    
    if success:
        await message.answer(
            f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —á–∞—Ç–∞", callback_data=f"admin:settings_chat:{chat_id}")
            ]])
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        DBManager.log_action(
            action="edit_chat_info",
            description=f"–ò–∑–º–µ–Ω–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ {chat_id}",
            admin_id=message.from_user.id,
            chat_id=chat_id
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.set_state(AdminStates.viewing_settings)
    else:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"admin:edit_chat_info:{chat_id}")
            ]])
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def process_edit_welcome(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(edit_chat_id=chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = await chat_manager.get_chat_info(chat_id)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    await state.set_state(AdminStates.editing_welcome)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=(
            f"üëã –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è: {chat_info['name']}\n\n"
            f"–¢–µ–∫—É—â–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:\n{chat_info['welcome_message']}\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:"
        ),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text=MESSAGES["back_button"], callback_data=f"admin:settings_chat:{chat_id}")
        ]])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def process_edit_welcome_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    chat_id = data.get("edit_chat_id")
    
    if not chat_id:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —á–∞—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        await state.set_state(AdminStates.viewing_settings)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    welcome_message = message.text.strip()
    
    if not welcome_message or len(welcome_message) < 10:
        await message.answer(
            "‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"admin:edit_welcome:{chat_id}")
            ]])
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    success = chat_manager.update_chat_settings(
        chat_id=chat_id,
        welcome_message=welcome_message
    )
    
    if success:
        await message.answer(
            f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n\n{welcome_message}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —á–∞—Ç–∞", callback_data=f"admin:settings_chat:{chat_id}")
            ]])
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        DBManager.log_action(
            action="edit_welcome_message",
            description=f"–ò–∑–º–µ–Ω–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ {chat_id}",
            admin_id=message.from_user.id,
            chat_id=chat_id
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.set_state(AdminStates.viewing_settings)
    else:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"admin:edit_welcome:{chat_id}")
            ]])
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
async def process_edit_join_mode(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(edit_chat_id=chat_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = await chat_manager.get_chat_info(chat_id)
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
    buttons = []
    
    # –†–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    auto_approve_btn = InlineKeyboardButton(
        text=f"{'‚úÖ' if chat_info['join_mode'] == 'auto_approve' else '‚¨ú'} –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
        callback_data=f"admin:set_join_mode:{chat_id}:auto_approve"
    )
    
    # –†–µ–∂–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    admin_approve_btn = InlineKeyboardButton(
        text=f"{'‚úÖ' if chat_info['join_mode'] == 'admin_approve' else '‚¨ú'} –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º",
        callback_data=f"admin:set_join_mode:{chat_id}:admin_approve"
    )
    
    # –†–µ–∂–∏–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
    questions_btn = InlineKeyboardButton(
        text=f"{'‚úÖ' if chat_info['join_mode'] == 'questions' else '‚¨ú'} –° –≤–æ–ø—Ä–æ—Å–∞–º–∏",
        callback_data=f"admin:set_join_mode:{chat_id}:questions"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–∞—Ç–∞
    toggle_active_btn = InlineKeyboardButton(
        text=f"{'üü¢ –ß–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω' if chat_info['is_active'] else 'üî¥ –ß–∞—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'}",
        callback_data=f"admin:toggle_active:{chat_id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    back_btn = InlineKeyboardButton(
        text=MESSAGES["back_button"],
        callback_data=f"admin:settings_chat:{chat_id}"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    buttons.append([auto_approve_btn])
    buttons.append([admin_approve_btn])
    buttons.append([questions_btn])
    buttons.append([toggle_active_btn])
    buttons.append([back_btn])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–∂–∏–º–∞
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=(
            f"üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–ª—è: {chat_info['name']}\n\n"
            f"–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {chat_info['join_mode']}\n"
            f"–°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–µ–Ω' if chat_info['is_active'] else '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è:"
        ),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
async def process_set_join_mode(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback data
    parts = callback_query.data.split(":")
    chat_id = int(parts[2])
    join_mode = parts[3]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∂–∏–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
    success = chat_manager.update_chat_settings(
        chat_id=chat_id,
        join_mode=join_mode
    )
    
    if success:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        DBManager.log_action(
            action="change_join_mode",
            description=f"–ò–∑–º–µ–Ω–µ–Ω —Ä–µ–∂–∏–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {chat_id} –Ω–∞ {join_mode}",
            admin_id=callback_query.from_user.id,
            chat_id=chat_id
        )
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
        await process_edit_join_mode(callback_query, state)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —á–∞—Ç–∞", callback_data=f"admin:settings_chat:{chat_id}")
            ]])
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–∞—Ç–∞
async def process_toggle_active(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–∞—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback data
    chat_id = int(callback_query.data.split(":")[2])
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat_info = await chat_manager.get_chat_info(chat_id)
    
    # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    new_status = not chat_info['is_active']
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    success = chat_manager.update_chat_settings(
        chat_id=chat_id,
        is_active=new_status
    )
    
    if success:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        DBManager.log_action(
            action="toggle_chat_active",
            description=f"–ò–∑–º–µ–Ω–µ–Ω —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞ {chat_id} –Ω–∞ {new_status}",
            admin_id=callback_query.from_user.id,
            chat_id=chat_id
        )
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
        await process_edit_join_mode(callback_query, state)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —á–∞—Ç–∞", callback_data=f"admin:settings_chat:{chat_id}")
            ]])
        )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
def register_admin_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    global _dp
    _dp = dp  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(cmd_admin, Command("admin"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—Å–µ—Ö –∞–¥–º–∏–Ω—Å–∫–∏—Ö callback_query
    dp.callback_query.register(process_admin_callback, lambda c: c.data and c.data.startswith("admin:"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö
    dp.message.register(process_admin_username_input, AdminStates.adding_account)
    dp.message.register(process_edit_chat_info_input, AdminStates.editing_chat_info)
    dp.message.register(process_edit_welcome_input, AdminStates.editing_welcome)

    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")